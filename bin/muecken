#!/usr/bin/env ruby

#
# THIS IS A TEST SCRIPT, MEANT FOR DEVELOPMENT USAGE ONLY
#

require 'muecken'
require 'optparse'
require 'yaml'

# define options
options = {
  rule_file: nil,
  input_files: []
}
opt_parser = OptionParser.new do |o|
  o.banner = 'Usage: muecken [OPTIONS]'
  o.separator ''
  o.separator 'Options:'
  # rule file
  o.on('-r', '--rules [RULE_FILE]', 'YAML file with an export of rules') do |r|
    options[:rule_file] = r
  end
  # list of input files
  o.on('-i', '--input FILE_1[,FILE_2][,...]', Array,
       'List of CSV files that contain entries') do |i|
    options[:input_files] = i
  end
  # help msg
  o.on_tail('-?', '--help', 'Show this message') { puts o; exit 1 }
  # version
  o.on_tail('--version', 'Show version') { puts Muecken::VERSION; exit 0 }
end
opt_parser.parse!

# check if rule and input files exists
([options[:rule_file]] + options[:input_files]).compact.each do |file|
  unless File.exist?(file)
    puts 'File does not exist: ' + file
    puts opt_parser
    exit 1
  end
end

# create engine
engine = Muecken::Engine.new

# setup rules
if options[:rule_file]
  # read rules file if provided
  engine.rules = YAML.load_file(options[:rule_file])
else
  # some default rules
  engine.rules = Muecken::Rules::Builder.month_rules
  engine.add_rule Muecken::Rules::Builder.year_rule(2013)
  engine.add_rule Muecken::Rules::Builder.year_rule(2014)
end

# load entries
entries = []
options[:input_files].each do |input_file|
  entries.concat Muecken::Parser::CSV.read_file(input_file)
end

# categorize entries
entries.each do |entry|
  engine.categorize_entry(entry)
  engine.add_entry(entry)
end

# print each category and it's entries
engine.categories.each do |category|
  puts "\n -- #{category.name} -- \n"
  engine.by_category(category).each do |entry|
    puts entry
  end
end

exit 0
